* Initialize package repositories
#+BEGIN_SRC emacs-lisp
(when (>= emacs-major-version 24)
  (require 'package)
  (package-initialize)
  (add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
  (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)
  (package-initialize))
#+END_SRC
* Set default buffer settings
** Set initial buffer to text-mode
   #+BEGIN_SRC emacs-lisp
   (setq initial-major-mode 'text-mode)
   #+END_SRC
** Supress toolbar and menu bar
   #+BEGIN_SRC emacs-lisp
   (menu-bar-mode -1)
   (tool-bar-mode -1)
   #+END_SRC
** Supress startup screen and clear scratch buffer
   #+BEGIN_SRC emacs-lisp
   (setq initial-scratch-message nil)
   (setq message-log-max nil)
   (setq inhibit-startup-screen t)
   (setq inhibit-startup-buffer-menu t)
   #+END_SRC
** Kill completions and messages buffers
   #+BEGIN_SRC emacs-lisp
   (kill-buffer "*Messages*")
   (add-hook 'minibuffer-exit-hook 
      '(lambda ()
         (let ((buffer "*Completions*"))
           (and (get-buffer buffer)
            (kill-buffer buffer)))))   
   #+END_SRC
* Configure line number functionality
** Enable linum-mode globally
   #+BEGIN_SRC emacs-lisp
   (cond
   ((string-equal system-type "windows-nt") (global-linum-mode t))
   ((string-equal system-type "gnu/linux") (global-linum-mode t)))
   #+END_SRC
** Enable hlinum
   #+BEGIN_SRC emacs-lisp
   (require 'hlinum)
   (hlinum-activate)
   #+END_SRC
** Supress linum-mode in various modes
   #+BEGIN_SRC emacs-lisp
   (add-hook 'treemacs-mode-hook (lambda() (linum-mode -1)))
   (add-hook 'tetris-mode-hook (lambda() (linum-mode -1)))
   (add-hook 'snake-mode-hook (lambda() (linum-mode -1)))
   (add-hook 'doctor-mode-hook (lambda() (linum-mode -1)))
   #+END_SRC
* Terminal specific settings
** Enable mouse interactivity in terminal mode
   #+BEGIN_SRC emacs-lisp
   (xterm-mouse-mode t)
   #+END_SRC
* Indentation settings
** Fix indentation to 4 spaces per tab
   #+BEGIN_SRC emacs-lisp
   (setq-default indent-tabs-mode nil)
   (setq-default tab-width 4)
   (setq tab-stop-list (number-sequence 4 200 4))
   #+END_SRC
* Scrolling settings
** Move one line when cursor exits view
   #+BEGIN_SRC emacs-lisp
   (setq scroll-conservatively 101)
   #+END_SRC
** Move one line when scrolling with mouse
   #+BEGIN_SRC emacs-lisp
   (setq mouse-wheel-scroll-amound '(1))
   (setq mouse-wheel-progressive-speed nil)
   #+END_SRC
* Configure lockfiles and backup files
** Disable lock file generation
   #+BEGIN_SRC emacs-lisp
   (setq create-lockfiles nil)
   #+END_SRC
** Change save directory for backup files
   #+BEGIN_SRC emacs-lisp
   (setq backup-directory-alist `(("." . "~/saves")))
   #+END_SRC
* Appearance Settings
** Font settings
   #+BEGIN_SRC emacs-lisp
   (cond
   ((string-equal system-type "windows-nt")
   (set-face-attribute 'default nil
                    :family "consolas"
                    :height 110
                    :weight 'normal
                    :width 'normal))
   ((string-equal system-type "gnu/linux")
   (set-face-attribute 'default nil
                    :family "Hack"
                    :height 110
                    :weight 'normal
                    :width 'normal)))
   #+END_SRC
** Cursor settings
   #+BEGIN_SRC emacs-lisp
   (setq-default cursor-type 'bar)
   (set-cursor-color "#d742f4")
   #+END_SRC
* Other external packages
** Rainbow delimiters
   #+BEGIN_SRC emacs-lisp
   (add-hook 'prog-mode-hook #'rainbow-delimiters-mode)
   #+END_SRC
** Centaur tabs
   #+BEGIN_SRC emacs-lisp
   (require 'centaur-tabs)
   (centaur-tabs-mode t)
   ;; (global-set-key (kbd "C-7") 'centaur-tabs-add-tab)
   ;; (global-set-key (kbd "C-8") 'centaur-tabs-backward)
   ;; (global-set-key (kbd "C-9") 'centaur-tabs-forward)
   (setq centaur-tabs-style "alternate")
   (setq centaur-tabs-set-bar 'over)
   #+END_SRC
** Treemacs
   #+BEGIN_SRC emacs-lisp
   (global-set-key [f9] 'treemacs)
   #+END_SRC
** SLIME
   #+BEGIN_SRC emacs-lisp
   (cond
   ((string-equal system-type "windows-nt") (load (expand-file-name "c:/Users/ljenks/quicklisp/slime-helper.el")))
   ((string-equal system-type "gnu/linux") (load (expand-file-name "~/quicklisp/slime-helper.el"))))
   (setq inferior-lisp-program "alisp")
   #+END_SRC
** Org-bullets
   #+BEGIN_SRC emacs-lisp
   (require 'org-bullets)
   (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
   #+END_SRC
* Copy/paste settings
** Enable copy/paste in/out of emacs
   #+BEGIN_SRC emacs-lisp
   (setq x-select-enable-clipboard t)
   #+END_SRC
